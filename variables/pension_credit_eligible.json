{
  "default_value": false,
  "definition_period": "year",
  "dtype": "bool_",
  "entity": "benunit",
  "file_path": "/openfisca_uk/variables/finance/benefit/family/pension_credit.py",
  "formulas": {
    "0001-01-01": {
      "ast": {
        "args": {
          "args": [
            {
              "arg": "benunit",
              "ast_class": "arg",
              "col_offset": 12,
              "end_col_offset": 19,
              "end_lineno": 1,
              "lineno": 1
            },
            {
              "arg": "period",
              "ast_class": "arg",
              "col_offset": 21,
              "end_col_offset": 27,
              "end_lineno": 1,
              "lineno": 1
            },
            {
              "arg": "parameters",
              "ast_class": "arg",
              "col_offset": 29,
              "end_col_offset": 39,
              "end_lineno": 1,
              "lineno": 1
            }
          ],
          "ast_class": "arguments",
          "defaults": [],
          "kw_defaults": [],
          "kwonlyargs": [],
          "posonlyargs": []
        },
        "ast_class": "FunctionDef",
        "body": [
          {
            "ast_class": "Assign",
            "col_offset": 4,
            "end_col_offset": 67,
            "end_lineno": 2,
            "lineno": 2,
            "targets": [
              {
                "ast_class": "Name",
                "col_offset": 4,
                "ctx": {
                  "ast_class": "Store"
                },
                "end_col_offset": 15,
                "end_lineno": 2,
                "id": "both_SP_age",
                "lineno": 2
              }
            ],
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_class": "Constant",
                      "col_offset": 46,
                      "end_col_offset": 57,
                      "end_lineno": 2,
                      "lineno": 2,
                      "value": "is_SP_age"
                    },
                    {
                      "ast_class": "Name",
                      "col_offset": 59,
                      "ctx": {
                        "ast_class": "Load"
                      },
                      "end_col_offset": 65,
                      "end_lineno": 2,
                      "id": "period",
                      "lineno": 2
                    }
                  ],
                  "ast_class": "Call",
                  "col_offset": 30,
                  "end_col_offset": 66,
                  "end_lineno": 2,
                  "func": {
                    "ast_class": "Attribute",
                    "attr": "members",
                    "col_offset": 30,
                    "ctx": {
                      "ast_class": "Load"
                    },
                    "end_col_offset": 45,
                    "end_lineno": 2,
                    "lineno": 2,
                    "value": {
                      "ast_class": "Name",
                      "col_offset": 30,
                      "ctx": {
                        "ast_class": "Load"
                      },
                      "end_col_offset": 37,
                      "end_lineno": 2,
                      "id": "benunit",
                      "lineno": 2
                    }
                  },
                  "keywords": [],
                  "lineno": 2
                }
              ],
              "ast_class": "Call",
              "col_offset": 18,
              "end_col_offset": 67,
              "end_lineno": 2,
              "func": {
                "ast_class": "Attribute",
                "attr": "min",
                "col_offset": 18,
                "ctx": {
                  "ast_class": "Load"
                },
                "end_col_offset": 29,
                "end_lineno": 2,
                "lineno": 2,
                "value": {
                  "ast_class": "Name",
                  "col_offset": 18,
                  "ctx": {
                    "ast_class": "Load"
                  },
                  "end_col_offset": 25,
                  "end_lineno": 2,
                  "id": "benunit",
                  "lineno": 2
                }
              },
              "keywords": [],
              "lineno": 2
            }
          },
          {
            "ast_class": "Assign",
            "col_offset": 4,
            "end_col_offset": 66,
            "end_lineno": 3,
            "lineno": 3,
            "targets": [
              {
                "ast_class": "Name",
                "col_offset": 4,
                "ctx": {
                  "ast_class": "Store"
                },
                "end_col_offset": 14,
                "end_lineno": 3,
                "id": "one_SP_age",
                "lineno": 3
              }
            ],
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_class": "Constant",
                      "col_offset": 45,
                      "end_col_offset": 56,
                      "end_lineno": 3,
                      "lineno": 3,
                      "value": "is_SP_age"
                    },
                    {
                      "ast_class": "Name",
                      "col_offset": 58,
                      "ctx": {
                        "ast_class": "Load"
                      },
                      "end_col_offset": 64,
                      "end_lineno": 3,
                      "id": "period",
                      "lineno": 3
                    }
                  ],
                  "ast_class": "Call",
                  "col_offset": 29,
                  "end_col_offset": 65,
                  "end_lineno": 3,
                  "func": {
                    "ast_class": "Attribute",
                    "attr": "members",
                    "col_offset": 29,
                    "ctx": {
                      "ast_class": "Load"
                    },
                    "end_col_offset": 44,
                    "end_lineno": 3,
                    "lineno": 3,
                    "value": {
                      "ast_class": "Name",
                      "col_offset": 29,
                      "ctx": {
                        "ast_class": "Load"
                      },
                      "end_col_offset": 36,
                      "end_lineno": 3,
                      "id": "benunit",
                      "lineno": 3
                    }
                  },
                  "keywords": [],
                  "lineno": 3
                }
              ],
              "ast_class": "Call",
              "col_offset": 17,
              "end_col_offset": 66,
              "end_lineno": 3,
              "func": {
                "ast_class": "Attribute",
                "attr": "max",
                "col_offset": 17,
                "ctx": {
                  "ast_class": "Load"
                },
                "end_col_offset": 28,
                "end_lineno": 3,
                "lineno": 3,
                "value": {
                  "ast_class": "Name",
                  "col_offset": 17,
                  "ctx": {
                    "ast_class": "Load"
                  },
                  "end_col_offset": 24,
                  "end_lineno": 3,
                  "id": "benunit",
                  "lineno": 3
                }
              },
              "keywords": [],
              "lineno": 3
            }
          },
          {
            "ast_class": "Assign",
            "col_offset": 4,
            "end_col_offset": 56,
            "end_lineno": 4,
            "lineno": 4,
            "targets": [
              {
                "ast_class": "Name",
                "col_offset": 4,
                "ctx": {
                  "ast_class": "Store"
                },
                "end_col_offset": 15,
                "end_lineno": 4,
                "id": "claiming_HB",
                "lineno": 4
              }
            ],
            "value": {
              "ast_class": "Compare",
              "col_offset": 18,
              "comparators": [
                {
                  "ast_class": "Constant",
                  "col_offset": 55,
                  "end_col_offset": 56,
                  "end_lineno": 4,
                  "lineno": 4,
                  "value": 0
                }
              ],
              "end_col_offset": 56,
              "end_lineno": 4,
              "left": {
                "args": [
                  {
                    "ast_class": "Constant",
                    "col_offset": 26,
                    "end_col_offset": 43,
                    "end_lineno": 4,
                    "lineno": 4,
                    "value": "housing_benefit"
                  },
                  {
                    "ast_class": "Name",
                    "col_offset": 45,
                    "ctx": {
                      "ast_class": "Load"
                    },
                    "end_col_offset": 51,
                    "end_lineno": 4,
                    "id": "period",
                    "lineno": 4
                  }
                ],
                "ast_class": "Call",
                "col_offset": 18,
                "end_col_offset": 52,
                "end_lineno": 4,
                "func": {
                  "ast_class": "Name",
                  "col_offset": 18,
                  "ctx": {
                    "ast_class": "Load"
                  },
                  "end_col_offset": 25,
                  "end_lineno": 4,
                  "id": "benunit",
                  "lineno": 4
                },
                "keywords": [],
                "lineno": 4
              },
              "lineno": 4,
              "ops": [
                {
                  "ast_class": "Gt"
                }
              ]
            }
          },
          {
            "ast_class": "Return",
            "col_offset": 4,
            "end_col_offset": 51,
            "end_lineno": 5,
            "lineno": 5,
            "value": {
              "ast_class": "BinOp",
              "col_offset": 11,
              "end_col_offset": 51,
              "end_lineno": 5,
              "left": {
                "ast_class": "Name",
                "col_offset": 11,
                "ctx": {
                  "ast_class": "Load"
                },
                "end_col_offset": 22,
                "end_lineno": 5,
                "id": "both_SP_age",
                "lineno": 5
              },
              "lineno": 5,
              "op": {
                "ast_class": "Add"
              },
              "right": {
                "ast_class": "BinOp",
                "col_offset": 26,
                "end_col_offset": 50,
                "end_lineno": 5,
                "left": {
                  "ast_class": "Name",
                  "col_offset": 26,
                  "ctx": {
                    "ast_class": "Load"
                  },
                  "end_col_offset": 36,
                  "end_lineno": 5,
                  "id": "one_SP_age",
                  "lineno": 5
                },
                "lineno": 5,
                "op": {
                  "ast_class": "Mult"
                },
                "right": {
                  "ast_class": "Name",
                  "col_offset": 39,
                  "ctx": {
                    "ast_class": "Load"
                  },
                  "end_col_offset": 50,
                  "end_lineno": 5,
                  "id": "claiming_HB",
                  "lineno": 5
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [],
        "end_col_offset": 51,
        "end_lineno": 5,
        "lineno": 1,
        "name": "formula"
      },
      "file_path": "/openfisca_uk/variables/finance/benefit/family/pension_credit.py",
      "source_code": "def formula(benunit, period, parameters):\n    both_SP_age = benunit.min(benunit.members(\"is_SP_age\", period))\n    one_SP_age = benunit.max(benunit.members(\"is_SP_age\", period))\n    claiming_HB = benunit(\"housing_benefit\", period) > 0\n    return both_SP_age + (one_SP_age * claiming_HB)\n",
      "start_line_number": 33,
      "stop_line_number": 38,
      "variables": [
        "housing_benefit",
        "is_SP_age"
      ]
    }
  },
  "is_period_size_independent": true,
  "json_type": "boolean",
  "label": "Whether eligible for Pension Credit",
  "name": "pension_credit_eligible",
  "referring_variables": [
    "pension_credit_GC",
    "pension_credit_MG",
    "pension_credit_SC"
  ],
  "start_line_number": 27,
  "stop_line_number": 38,
  "value_type": "bool"
}
